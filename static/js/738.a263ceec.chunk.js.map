{"version":3,"file":"static/js/738.a263ceec.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MoviesItem/MoviesItem.module.css?58c2","components/MoviesItem/MoviesItem.jsx","webpack://react-homework-template/./src/components/MoviesGallery/MoviesGallery.module.css?276e","components/MoviesGallery/MoviesGallery.jsx","webpack://react-homework-template/./src/components/SearchMovies/FormMovies/FormMovies.module.css?5336","components/SearchMovies/FormMovies/FormMovies.jsx","components/SearchMovies/SearchMovies.jsx","webpack://react-homework-template/./src/pages/Movies/Movie.module.css?ed9b","pages/Movies/Movies.jsx","services/defaultPoster.js","services/movieAPI.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { Dna } from  'react-loader-spinner'\n\nconst Loader = () => {\n    return (\n        <Dna\n            visible={true}\n            height=\"100\"\n            width=\"100\"\n            ariaLabel=\"dna-loading\"\n            wrapperStyle={{\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n            }}\n            wrapperClass=\"dna-wrapper\"\n        />\n    )\n}\nexport default Loader","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MoviesItem_item__jqTBO\",\"title\":\"MoviesItem_title__vhiTm\",\"infoMovie\":\"MoviesItem_infoMovie__8nZ+b\",\"score\":\"MoviesItem_score__yu7gp\"};","import { Link, useLocation } from \"react-router-dom\";\nimport s from \"./MoviesItem.module.css\"\n\nimport { getPosterImg } from \"services/defaultPoster\";\n\nexport const MoviesItem = ({id, original_title, poster_path, vote_average}) => {\n    const location = useLocation();\n\n    return (\n        <div className={s.item}>\n        <li>\n        <Link state={{ from: location }} to={`/movies/${id}`}>\n            <div className={s.container}>\n                <img src={getPosterImg(poster_path)} alt={original_title} />\n                <div className={s.infoMovie}>\n                    <h2 className={s.title}>{original_title}</h2>\n                    <p className={s.score}>{(vote_average).toFixed(1)}</p>\n                </div>\n            </div>\n        \n        </Link>\n        </li>\n        </div>\n       )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MoviesGallery_container__p0OR5\",\"gallery\":\"MoviesGallery_gallery__XrCR3\"};","import { MoviesItem } from \"components/MoviesItem/MoviesItem\";\nimport s from \"./MoviesGallery.module.css\"\n\nexport const MovieGallery = ({items}) => {\n    return (\n        <>\n            <div className={s.container}>\n                <ul className={s.gallery}>\n                    {items.map(item => (\n                        <MoviesItem key={item.id} {...item} />\n                    ))}\n                </ul>\n            </div>\n        </>\n    );\n   \n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FormMovies_container__9Kz3m\",\"form\":\"FormMovies_form__cUGPV\",\"input\":\"FormMovies_input__uZ3Ma\"};","import { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport s from \"./FormMovies.module.css\"\n\n\nexport const FormMovies = ({ onSubmit }) => {\n    const [query,setQuery] = useState(\"\")\n\n    const changInput = (event) => {\n        setQuery(event.target.value)\n    }\n\n    return (\n        <div className={s.container}>\n            <form className={s.form} onSubmit={(event) => {\n                event.preventDefault()\n                onSubmit(query)\n                setQuery(\"\")\n            }}>\n                <input\n                    className={s.input}\n                    value={query}\n                    name=\"query\"\n                    onChange={changInput}\n                    type=\"text\"\n                    placeholder=\"Search movies\"\n                    required\n                />\n            </form>\n        </div>\n    )\n};\n\nFormMovies.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nimport { FormMovies } from \"./FormMovies/FormMovies\";\nimport { getSearchMovies } from \"services/movieAPI\";\nimport { MovieGallery } from \"components/MoviesGallery/MoviesGallery\";\nimport Loader from \"components/Loader/Loader\";\n\n\nexport const SearchMovies = () => {\n    const [movies,setMovies] = useState([]);\n    const [loading,setLoading] = useState(false)\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query');\n\n    useEffect(() => {\n        const fetchItems = async () => {\n            setLoading(true)\n        try {\n            const result = await getSearchMovies(query)\n            setMovies(result)\n            setLoading(false)\n        }catch(error) {\n            console.log(error.message);\n            setLoading(false)\n         }\n        }\n        if(query) {\n            fetchItems()\n         }\n\n    },[query])\n\n    const submitForm = (query) => setSearchParams({query});\n\n    \n    return (\n        <>\n            <FormMovies onSubmit={submitForm} />\n            {loading && <Loader />}\n            {Boolean(movies.length) &&\n                <MovieGallery items={movies} />\n            }\n        </>\n    )\n\n}","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Movie_title__WqAPN\"};","import { SearchMovies } from \"components/SearchMovies/SearchMovies\";\nimport s from \"./Movie.module.css\"\n\nconst Movies = () => {\n    return (\n        <>\n        <h2 className={s.title}>Search movies</h2>\n        <SearchMovies />\n        </>\n    )\n}\nexport default Movies","const DEFAULT_IMG =\n  'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNIZxcqjHSXy3woDzxKGajAzwWnoc96DXFgOFxhb0r5rCn61zO&s';\nconst BASE_IMG = 'https://image.tmdb.org/t/p/w500';\n\nexport const getPosterImg = path =>\n  path ? `${BASE_IMG}${path}` : `${DEFAULT_IMG}`;\n","import axios from 'axios';\n\nconst API_KEY = '171815f7c9e508fe2a53a40eb2dd3583';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getSearchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getMoviesDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMoviesReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["visible","height","width","ariaLabel","wrapperStyle","position","top","left","transform","wrapperClass","MoviesItem","id","original_title","poster_path","vote_average","location","useLocation","className","s","state","from","to","src","getPosterImg","alt","toFixed","MovieGallery","items","map","item","FormMovies","onSubmit","useState","query","setQuery","event","preventDefault","value","name","onChange","target","type","placeholder","required","SearchMovies","movies","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchItems","getSearchMovies","result","console","log","message","Loader","Boolean","length","path","instance","axios","baseURL","params","api_key","data","results","getTrendingMovies","getMoviesDetails","getMoviesCast","getMoviesReviews","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}