{"version":3,"file":"static/js/168.9c16d594.chunk.js","mappings":"uKAmBA,UAjBe,WACX,OACI,SAAC,KAAD,CACIA,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,cACVC,aAAc,CACVC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,yBAEfC,aAAa,eAGxB,C,+ICjBD,GAAgB,UAAY,2BAA2B,OAAS,wBAAwB,KAAO,sBAAsB,KAAO,sBAAsB,YAAc,8B,SC+ChK,EAzCgB,WACZ,OAA6BC,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA6BF,EAAAA,EAAAA,WAAS,GAAtC,eAAOG,EAAP,KAAeC,EAAf,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAgBR,OAfAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,6FACfJ,GAAW,GADI,UAEKK,EAAAA,EAAAA,IAAiBJ,GAFtB,gBAEZK,EAFY,EAEZA,QACP,IACIR,EAAWQ,GACXN,GAAW,EAIb,CAHD,MAAMO,GACHC,QAAQC,IAAIF,EAAMG,SAClBV,GAAW,EACb,CATiB,2CAAH,qDAWhBI,GACH,GAAC,CAACH,KAGC,gCACCF,IAAW,SAACY,EAAA,QAAD,KACZ,gBAAKC,UAAWC,EAAAA,UAAhB,SACKC,QAAQC,OAAOC,OAAOnB,GAASoB,QAAU,GACtC,eAAIL,UAAWC,EAAAA,KAAf,SACKhB,EAAQqB,KAAI,gBAAEjB,EAAF,EAAEA,GAAIkB,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACb,gBAAaR,UAAaC,EAAAA,KAA1B,WACI,eAAID,UAAWC,EAAAA,OAAf,SAA0BM,KAC1B,cAAGP,UAAWC,EAAAA,KAAd,SAAuBO,MAFlBnB,EADI,OAQjB,cAAGW,UAAWC,EAAAA,YAAd,0DAMf,C,sLC1CKQ,E,MAAWC,EAAAA,OAAa,CAC5BC,QAHe,+BAIfC,OAAQ,CACNC,QANY,sCAUHC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAASO,IAAI,gBAAiB,CACnDJ,OAAQ,CACNG,MAAAA,KAHyB,uBACrBE,EADqB,EACrBA,KADqB,kBAMtBA,EAAKvB,SANiB,2CAAH,sDASfwB,EAAiB,mCAAG,sGACRT,EAASO,IAAI,uBADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBE,EAAgB,mCAAG,WAAM9B,GAAN,yFACPoB,EAASO,IAAT,iBAAuB3B,IADhB,uBACtB4B,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBG,EAAa,mCAAG,WAAM/B,GAAN,yFACJoB,EAASO,IAAT,iBAAuB3B,EAAvB,aADI,uBACnB4B,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbxB,EAAgB,mCAAG,WAAMJ,GAAN,yFACPoB,EAASO,IAAT,iBAAuB3B,EAAvB,aADO,uBACtB4B,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qD","sources":["components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/movieAPI.js"],"sourcesContent":["import { Dna } from  'react-loader-spinner'\n\nconst Loader = () => {\n    return (\n        <Dna\n            visible={true}\n            height=\"100\"\n            width=\"100\"\n            ariaLabel=\"dna-loading\"\n            wrapperStyle={{\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n            }}\n            wrapperClass=\"dna-wrapper\"\n        />\n    )\n}\nexport default Loader","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Reviews_container__2j80+\",\"author\":\"Reviews_author__CqYAZ\",\"text\":\"Reviews_text__EqLvx\",\"item\":\"Reviews_item__DJKij\",\"alternative\":\"Reviews_alternative__HV09F\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { getMoviesReviews } from \"services/movieAPI\";\nimport Loader from \"components/Loader/Loader\";\nimport s from \"./Reviews.module.css\"\n\nconst Reviews = () => {\n    const [reviews,setReviews] = useState([])\n    const [loading,setLoading] = useState(false)\n\n    const { id } = useParams();\n    useEffect(() => {\n        const fetchItems = async () => {\n            setLoading(true)\n        const {results} = await getMoviesReviews(id)\n        try{\n            setReviews(results)\n            setLoading(false)\n        }catch(error) {\n            console.log(error.message);\n            setLoading(false)\n         }\n        }\n        fetchItems()\n    },[id])\n\n    return (\n        <>\n        {loading && <Loader />}\n        <div className={s.container}>\n            {Boolean(Object.values(reviews).length) > 0 ? (\n                <ul className={s.list}>\n                    {reviews.map(({id, author, content}) => \n                    <li key={id} className = {s.item}>\n                        <h2 className={s.author}>{author}</h2>\n                        <p className={s.text}>{content}</p>\n                    </li> \n                )}\n                </ul>\n            ) : (\n                <p className={s.alternative}>We don't have any reviews for this movie</p>\n            )\n            }\n        </div>\n        </>\n    )\n}\nexport default Reviews","import axios from 'axios';\n\nconst API_KEY = '171815f7c9e508fe2a53a40eb2dd3583';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getSearchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getMoviesDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMoviesReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["visible","height","width","ariaLabel","wrapperStyle","position","top","left","transform","wrapperClass","useState","reviews","setReviews","loading","setLoading","id","useParams","useEffect","fetchItems","getMoviesReviews","results","error","console","log","message","Loader","className","s","Boolean","Object","values","length","map","author","content","instance","axios","baseURL","params","api_key","getSearchMovies","query","get","data","getTrendingMovies","getMoviesDetails","getMoviesCast"],"sourceRoot":""}