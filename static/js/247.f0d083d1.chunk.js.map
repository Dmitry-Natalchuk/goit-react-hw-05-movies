{"version":3,"file":"static/js/247.f0d083d1.chunk.js","mappings":"+OAoDA,UA7Ca,WACT,OAAuBA,EAAAA,EAAAA,UAAS,IAAhC,eAAOC,EAAP,KAAYC,EAAZ,KACA,GAA6BF,EAAAA,EAAAA,WAAS,GAAtC,eAAOG,EAAP,KAAeC,EAAf,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAiBZ,OAhBAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,6FACfJ,GAAW,GADI,UAEEK,EAAAA,EAAAA,IAAcJ,GAFhB,gBAEZJ,EAFY,EAEZA,KACP,IACIC,EAAQD,GACRG,GAAW,EAIb,CAHD,MAAMM,GACHC,QAAQC,IAAIF,EAAMG,SAClBT,GAAW,EACb,CATiB,2CAAH,qDAWhBI,GACH,GAAC,CAACH,KAIC,gCACKF,IAAW,SAAC,UAAD,IACXW,QAAQC,OAAOC,OAAOf,GAAMgB,QAAU,GAC/B,wBACKhB,EAAKiB,KAAI,gBAAGb,EAAH,EAAGA,GAAIc,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACN,2BACA,0BACG,gBAAKC,KAAKC,EAAAA,EAAAA,GAAaH,GAAeI,IAAI,GAAGC,MAAO,SAExD,4BACI,uBAAIN,KACJ,uBAAIE,SANEhB,EADH,OAad,mEAKf,C,mDChCD,UAjBe,WACX,OACI,SAAC,KAAD,CACIqB,SAAS,EACTC,OAAO,MACPF,MAAM,MACNG,UAAU,cACVC,aAAc,CACVC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,yBAEfC,aAAa,eAGxB,C,sDClBD,IAIaX,EAAe,SAAAY,GAAI,OAC9BA,EAAI,UAHW,mCAGX,OAAiBA,GAAjB,UAJJ,6GAG8B,C,sLCC1BC,E,MAAWC,EAAAA,OAAa,CAC5BC,QAHe,+BAIfC,OAAQ,CACNC,QANY,sCAUHC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAASO,IAAI,gBAAiB,CACnDJ,OAAQ,CACNG,MAAAA,KAHyB,uBACrBE,EADqB,EACrBA,KADqB,kBAMtBA,EAAKC,SANiB,2CAAH,sDASfC,EAAiB,mCAAG,sGACRV,EAASO,IAAI,uBADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBG,EAAgB,mCAAG,WAAM1C,GAAN,yFACP+B,EAASO,IAAT,iBAAuBtC,IADhB,uBACtBuC,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBnC,EAAa,mCAAG,WAAMJ,GAAN,yFACJ+B,EAASO,IAAT,iBAAuBtC,EAAvB,aADI,uBACnBuC,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbI,EAAgB,mCAAG,WAAM3C,GAAN,yFACP+B,EAASO,IAAT,iBAAuBtC,EAAvB,aADO,uBACtBuC,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qD","sources":["components/Cast/Cast.jsx","components/Loader/Loader.jsx","services/defaultPoster.js","services/movieAPI.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { getMoviesCast } from \"services/movieAPI\"\nimport { getPosterImg } from \"services/defaultPoster\"\nimport Loader from \"components/Loader/Loader\";\n\nconst Cast = () => {\n    const [cast,setCast] = useState([])\n    const [loading,setLoading] = useState(false)\n\n    const { id } = useParams();\nuseEffect(() => {\n    const fetchItems = async () => {\n        setLoading(true)\n    const {cast} = await getMoviesCast(id)\n    try{\n        setCast(cast)\n        setLoading(false)\n    }catch(error) {\n        console.log(error.message);\n        setLoading(false)\n     }\n    }\n    fetchItems()\n},[id])\n\n\nreturn (\n    <>\n        {loading && <Loader />}\n        {Boolean(Object.values(cast).length) > 0 ? (\n                <ul>\n                    {cast.map(({ id, name, profile_path, character }) =>\n                        <li key={id}>\n                        <div>\n                           <img src={getPosterImg(profile_path)} alt=\"\" width={100} />\n                       </div>\n                       <div>\n                           <p>{name}</p>\n                           <p>{character}</p>\n                       </div>\n                       </li>\n                    )}\n                </ul>\n            ) : (\n                <p>We don't have any cast for this movie</p>\n        )}\n    </>\n     )\n\n}\nexport default Cast","import { Dna } from  'react-loader-spinner'\n\nconst Loader = () => {\n    return (\n        <Dna\n            visible={true}\n            height=\"100\"\n            width=\"100\"\n            ariaLabel=\"dna-loading\"\n            wrapperStyle={{\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n            }}\n            wrapperClass=\"dna-wrapper\"\n        />\n    )\n}\nexport default Loader","const DEFAULT_IMG =\n  'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNIZxcqjHSXy3woDzxKGajAzwWnoc96DXFgOFxhb0r5rCn61zO&s';\nconst BASE_IMG = 'https://image.tmdb.org/t/p/w500';\n\nexport const getPosterImg = path =>\n  path ? `${BASE_IMG}${path}` : `${DEFAULT_IMG}`;\n","import axios from 'axios';\n\nconst API_KEY = '171815f7c9e508fe2a53a40eb2dd3583';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getSearchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getMoviesDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMoviesReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["useState","cast","setCast","loading","setLoading","id","useParams","useEffect","fetchItems","getMoviesCast","error","console","log","message","Boolean","Object","values","length","map","name","profile_path","character","src","getPosterImg","alt","width","visible","height","ariaLabel","wrapperStyle","position","top","left","transform","wrapperClass","path","instance","axios","baseURL","params","api_key","getSearchMovies","query","get","data","results","getTrendingMovies","getMoviesDetails","getMoviesReviews"],"sourceRoot":""}